<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>